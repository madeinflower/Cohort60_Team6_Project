package view;

import model.Book;
import model.Role;
import model.User;
import service.MainService;
import utils.MyArrayList;
import utils.MyList;

import java.util.Scanner;

import static view.RainbowConsole.*;

public class Menu {

    private final MainService service;
    private final Scanner scanner = new Scanner(System.in);

    public Menu(MainService service) {
        this.service = service;
    }

    public void start() {
        while (true) {
            User activeUser = service.getActiveUser(); // –ø–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            Role role = (activeUser != null) ? activeUser.getRole() : Role.GUEST; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –µ–≥–æ —Ä–æ–ª—å
            showMenu(role, activeUser);  // –ø–µ—Ä–µ–¥–∞–µ–º role –∏ activeUser

            // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–∫–∏
            if (scanner.hasNextInt()) {
                int choice = scanner.nextInt();
                scanner.nextLine(); // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞ –≤–≤–æ–¥–∞
                handleMenuChoice(choice, role);
            } else {
                // –ï—Å–ª–∏ –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –æ—á–∏—â–∞–µ–º –≤–≤–æ–¥
                prnt("\n   [!] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –º–µ–Ω—é!", 4);
                scanner.nextLine();
                waitRead();
            }
        }
    }

    private void showMenu(Role role, User activeUser) {
        prnt("== üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ \"–ó–Ω–∞–Ω–∏—è –í–µ–∫–∞\" ===", 1);
        prnt("1. –í—Å–µ –∫–Ω–∏–≥–∏", 0);
        prnt("2. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–∏–≥–∏", 0);
        prnt("3. –ö–Ω–∏–≥–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∞–≤—Ç–æ—Ä—É", 0);
        prnt("4. –ö–Ω–∏–≥–∏, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", 0);
        prnt("5. –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", 0);
        prnt("6. –ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É", 0);

        if (role == Role.USER || role == Role.ADMIN) {
            prnt("-----------------------------", 1);
            prnt("7. –í–∑—è—Ç—å –∫–Ω–∏–≥—É", 0);
            prnt("8. –í–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É", 0);
            prnt("9. " + ACCENT + "‚ù§" + RESET + " –ú–æ–∏ –≤–∑—è—Ç—ã–µ –∫–Ω–∏–≥–∏", 0);
        }

        if (role == Role.ADMIN) {
            prnt("--------------------------------", 1);
            prnt("10. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É", 1);
            prnt("11. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–∏–≥—É", 1);
            prnt("12. –£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É", 1);
            prnt("13. –ö–Ω–∏–≥–∏ –Ω–∞ —Ä—É–∫–∞—Ö", 1);
            prnt("14. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", 2);
        }

        if (role == Role.GUEST) {
            prnt("15. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", 2);
            prnt("16. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", 2);
        }

        if (role == Role.USER || role == Role.ADMIN) {
            String username = activeUser.getEmail();
            String roleName = activeUser.getRole().name();
            prnt("--------------------------------", 1);
            prnt("17. –í—ã–π—Ç–∏ (" + username + ")", 3);
        }

        prnt("0. Exit", 3);
        prnt("==============================", 1);
        System.out.print("  üëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ");
    }

    private void handleMenuChoice(int choice, Role role) {
        if (choice == 1) {
            /*
            1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥
            2. –ï—Å–ª–∏ –∫–Ω–∏–≥ –Ω–µ—Ç - –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –ø—É—Å—Ç.
            3. –ï—Å–ª–∏ –∫–Ω–∏–≥–∏ –µ—Å—Ç—å - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥
            4. –°—Ç–∞–≤–∏–º –∑–∞–¥–µ—Ä–∂–∫—É - –¥–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫
            */
            prnt("\n   = –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ===", 1);
            //System.out.println();
            MyList<Book> books = service.getAllBooks();
            if (books == null || books.isEmpty()) {
                prnt("–í –Ω–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∫–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : books) {
                    prnt(""
                            + WARNING + book.getId() + ". "+ RESET
                            + "" + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }
            waitRead();

        } else if (choice == 2) { // –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥
            prnt("\n   = –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥ ===", 1);
            //System.out.println();
            MyList<Book> availableBooks = service.getAvailableBooks();
            if (availableBooks == null || availableBooks.isEmpty()) {
                prnt("–î–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : availableBooks) {
                    prnt(""
                            + WARNING + book.getId() + ". "+ RESET
                            + "" + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }
            waitRead();
        } else if (choice == 3) {
            prnt("\n   = –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –∞–≤—Ç–æ—Ä—É ===", 1);
            //System.out.println();
            MyList<Book> sortedBooks = service.getSortedBooks("author");
            if (sortedBooks == null || sortedBooks.isEmpty()) {
                prnt("–ö–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : sortedBooks) {
                    prnt(WARNING + book.getId() + ". " + RESET
                            + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }
            waitRead();

        } else if (choice == 4) {
            prnt("\n   = –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é ===", 1);
            //System.out.println();
            MyList<Book> sortedBooks = service.getSortedBooks("title");
            if (sortedBooks == null || sortedBooks.isEmpty()) {
                prnt("–ö–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : sortedBooks) {
                    prnt(WARNING + book.getId() + ". " + RESET
                            + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }
            waitRead();

        } else if (choice == 5) {
            prnt("   = –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é ===", 1);
            // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–ø–æ–∏—Å–∫ –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä—Å—Ç–≤–∞)
            System.out.print("    –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –∏–ª–∏ –µ–µ —á–∞—Å—Ç—å: ");
            String titleSearch = scanner.nextLine();

            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥, —É–±–µ–¥–∏–≤—à–∏—Å—å, —á—Ç–æ –æ–Ω –Ω–µ null
            MyList<Book> booksByTitleSearch = service.searchByTitleOrAuthor(titleSearch);

            // –ï—Å–ª–∏ –º–µ—Ç–æ–¥ –≤–µ—Ä–Ω—É–ª null, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º
            if (booksByTitleSearch == null) {
                booksByTitleSearch = new MyArrayList<>();
            }

            if (booksByTitleSearch.isEmpty()) {
                prnt("   –ö–Ω–∏–≥–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ '" + titleSearch + "', –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", 3);
            } else {
                System.out.println();
                for (Book book : booksByTitleSearch) {
                    prnt(WARNING + book.getId() + ". " + RESET
                            + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }
            waitRead();

        } else if (choice == 6) {
            prnt("\n   = –ü–æ–∏—Å–∫ –∫–Ω–∏–≥ –ø–æ –∞–≤—Ç–æ—Ä—É ===", 1);
            // –ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É (–ø–æ–∏—Å–∫ –±–µ–∑ —É—Ç–æ—á–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è)
            System.out.print("    –í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏: ");
            String authorSearch = scanner.nextLine();
            MyList<Book> booksByAuthorSearch = service.searchByTitleOrAuthor(authorSearch);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ booksByAuthorSearch –Ω–µ —Ä–∞–≤–µ–Ω null
            if (booksByAuthorSearch == null || booksByAuthorSearch.isEmpty()) {
                prnt("   –ö–Ω–∏–≥–∏ —Å –∞–≤—Ç–æ—Ä–æ–º '" + authorSearch + "' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", 3);
            } else {
                System.out.println();
                for (Book book : booksByAuthorSearch) {
                    prnt(WARNING + book.getId() + ". " + RESET
                            + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }
            waitRead();

        } else if (choice == 7 && (role == Role.USER || role == Role.ADMIN)) {

            prnt("\n   = –í–∑—è—Ç—å –∫–Ω–∏–≥—É ===\n", 1);

            MyList<Book> availableBooks = service.getAvailableBooks();
            if (availableBooks == null || availableBooks.isEmpty()) {
                prnt("–î–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : availableBooks) {
                    prnt(""
                            + WARNING + book.getId() + ". "+ RESET
                            + "" + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }

            System.out.print("\n"+PRIMARY+"   –í–≤–µ–¥–∏—Ç–µ id –∫–Ω–∏–≥–∏: "+RESET);
            int id = scanner.nextInt();
            scanner.nextLine();

            // –ü–æ–ª—É—á–∞–µ–º –∫–Ω–∏–≥—É –ø–æ id –∏–∑ –æ–±—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
            MyList<Book> allBooks = service.getAllBooks();
            Book selectedBook = null;
            for (Book book : allBooks) {
                if (book.getId() == id) {
                    selectedBook = book;
                    break;
                }
            }

            if (selectedBook == null) {
                prnt("\n   –ö–Ω–∏–≥–∞ —Å —Ç–∞–∫–∏–º id –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", 4);
            } else if (selectedBook.isTaken()) {
                prnt("\n   –ü—Ä–æ—Å—Ç–∏—Ç–µ, –Ω–æ —ç—Ç–∞ –∫–Ω–∏–≥–∞ —É–∂–µ –≤–∑—è—Ç–∞.", 4);
            } else {
                // –í—ã–∑—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –≤–∑—è—Ç–∏—è –∫–Ω–∏–≥–∏
                service.takeBook(id);
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É –≤ —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                service.getActiveUser().getUserBooks().add(selectedBook);
                prnt("\n   –ö–Ω–∏–≥–∞ \""+ selectedBook.getTitle()+"\" –í–∞–º–∏ —É—Å–ø–µ—à–Ω–æ –≤–∑—è—Ç–∞!", 2);
            }
            waitRead();

        } else if (choice == 8 && (role == Role.USER || role == Role.ADMIN)) {

            prnt("\n   = –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ ===", 1);
            //System.out.println();
            User activeUser = service.getActiveUser();
            MyList<Book> myBooks = activeUser.getUserBooks();
            if (myBooks == null || myBooks.isEmpty()) {
                prnt(" –£ –≤–∞—Å –Ω–µ—Ç –≤–∑—è—Ç—ã—Ö –∫–Ω–∏–≥.", 3);
            } else {
                for (Book book : myBooks) {
                    prnt(WARNING + book.getId() + ". " + RESET
                            + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }


                System.out.print("\n    –í–≤–µ–¥–∏—Ç–µ id –∫–Ω–∏–≥–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞: ");
                int id = scanner.nextInt();
                scanner.nextLine();

                Book selectedBook = null;
                MyList<Book> userBooks = activeUser.getUserBooks();
                for (Book book : userBooks) {
                    if (book.getId() == id) { // –ò—â–µ–º –∫–Ω–∏–≥—É –≤ —Å–ø–∏—Å–∫–µ –∫–Ω–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        selectedBook = book;
                        break;
                    }
                }

                if (selectedBook == null) {
                    prnt("\n     –£ –≤–∞—Å –Ω–µ—Ç –∫–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º id.", 4);
                } else {
                    // –í—ã–∑—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫–Ω–∏–≥–∏
                    service.returnBook(id);
                    // –£–¥–∞–ª—è–µ–º –∫–Ω–∏–≥—É –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    // (–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ MyList –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ remove(T value))
                    userBooks.remove(selectedBook);
                    prnt("\n    –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞!", 2);
                }

            }
            waitRead();

        } else if (choice == 9 && (role == Role.USER || role == Role.ADMIN)) {

            prnt("\n   = –ú–æ–∏ –≤–∑—è—Ç—ã–µ –∫–Ω–∏–≥–∏ ===", 1);
            //System.out.println();
            User activeUser = service.getActiveUser();
            MyList<Book> myBooks = activeUser.getUserBooks();
            if (myBooks == null || myBooks.isEmpty()) {
                prnt(" –£ –≤–∞—Å –Ω–µ—Ç –≤–∑—è—Ç—ã—Ö –∫–Ω–∏–≥.", 3);
            } else {
                for (Book book : myBooks) {
                    prnt(WARNING + book.getId() + ". " + RESET
                            + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }
            waitRead();

        } else if (choice == 10 && role == Role.ADMIN) {

            prnt("\n  = –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É ===", 1);
            //System.out.println();

            System.out.print("    –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
            String title = scanner.nextLine().trim();

            System.out.print("    –í–≤–µ–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏: ");
            String author = scanner.nextLine().trim();

            if (title.isEmpty() || author.isEmpty()) {
                prnt("\n –û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏.", 4);
            } else {
                service.addBook(title, author);
                prnt("\n    –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!", 2);
            }
            waitRead();

        } else if (choice == 11 && role == Role.ADMIN) {
            prnt("\n   = –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ ===", 1);

            // –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞
            MyList<Book> availableBooks = service.getAvailableBooks();
            if (availableBooks == null || availableBooks.isEmpty()) {
                prnt("–î–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : availableBooks) {
                    prnt(""
                            + WARNING + book.getId() + ". "+ RESET
                            + "" + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }

            System.out.print("\n"+PRIMARY+"   –í–≤–µ–¥–∏—Ç–µ id –∫–Ω–∏–≥–∏: "+RESET);
            int id = scanner.nextInt();
            scanner.nextLine();

            System.out.print("\n   –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏: ");
            String newTitle = scanner.nextLine().trim();

            System.out.print("    –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ –∫–Ω–∏–≥–∏: ");
            String newAuthor = scanner.nextLine().trim();

            if (newTitle.isEmpty() || newAuthor.isEmpty()) {
                prnt("\n    –û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏.", 4);
            } else {
                service.editBook(id, newTitle, newAuthor);
                prnt("\n   –ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞!", 2);
            }
            waitRead();

        } else if (choice == 12 && role == Role.ADMIN) {
            prnt("\n   = –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ===", 1);
            // –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ –¥–ª—è –≤—ã–±–æ—Ä–∞
            MyList<Book> availableBooks = service.getAvailableBooks();
            if (availableBooks == null || availableBooks.isEmpty()) {
                prnt("–î–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : availableBooks) {
                    prnt(""
                            + WARNING + book.getId() + ". "+ RESET
                            + "" + book.getTitle() + " " + WARNING
                            + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor(), 3);
                }
            }

            System.out.print("\n"+PRIMARY+"   –í–≤–µ–¥–∏—Ç–µ id –∫–Ω–∏–≥–∏: "+RESET);
            if (scanner.hasNextInt()) {
                int id = scanner.nextInt();
                scanner.nextLine();
                if (id <= 0) {
                    prnt("\n   –û—à–∏–±–∫–∞: —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–Ω–∏–≥–∏.", 4);
                } else {

                    // –ü–æ–ª—É—á–∞–µ–º –∫–Ω–∏–≥—É –ø–æ id –∏–∑ –æ–±—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
                    MyList<Book> allBooks = service.getAllBooks();
                    Book selectedBook = null;
                    for (Book book : allBooks) {
                        if (book.getId() == id) {
                            selectedBook = book;
                            break;
                        }
                    }

                    service.deleteBook(id);
                    prnt("\n   –ö–Ω–∏–≥–∞ "+ selectedBook.getTitle() + " —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!", 2);
                }
            } else {
                prnt("\n   –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.", 4);
                scanner.nextLine(); // –æ—á–∏—Å—Ç–∫–∞
            }
            waitRead();

        } else if (choice == 13 && role == Role.ADMIN) {
            prnt("\n   = –ö–Ω–∏–≥–∏ –Ω–∞ —Ä—É–∫–∞—Ö ===", 1);
            //System.out.println();
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            MyList<User> users = service.getAllUsers();
            boolean found = false;
            for (User user : users) {
                MyList<Book> userBooks = user.getUserBooks();
                if (userBooks != null && !userBooks.isEmpty()) {
                    found = true;
                    for (Book book : userBooks) {
                        prnt(WARNING + book.getId() + ". " + RESET
                                + book.getTitle() + " " + WARNING
                                + "–ê–≤—Ç–æ—Ä: " + RESET + book.getAuthor()
                                + PRIMARY + "  - " + ACCENT + " —É —á–∏—Ç–∞—Ç–µ–ª—è: " + PRIMARY + user.getEmail() + RESET + " (xx –¥–Ω.)", 3);
                    }
                }
            }
            if (!found) {
                prnt("\n    –ö–Ω–∏–≥ –Ω–∞ —Ä—É–∫–∞—Ö –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            }
            waitRead();

        } else if (choice == 14 && role == Role.ADMIN) {
            showUserManagementMenu();
        } else if (choice == 15) {
            addUser("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è");
        } else if (choice == 16) {
            loginUser();
        } else if (choice == 17 && (role == Role.USER || role == Role.ADMIN)) {
            service.logout();
            prnt("\n   –í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞!", 2);
            waitRead();
        } else if (choice == 0) {
            prnt("\n   –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –µ—â–µ!", 2);
            System.exit(0);
        } else {
            prnt("\n   –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", 4);
            waitRead();
        }
    }

    private void showUserManagementMenu() {
        while (true) {
            prnt("=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ===", 1);
            prnt("1. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", 2);
            prnt("2. –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –∫–Ω–∏–≥–∏", 2);
            prnt("3. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 2);
            prnt("4. –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 2);
            prnt("5. –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 2);
            prnt("0. –ù–∞–∑–∞–¥", 3);
            prnt("==============================", 1);
            System.out.print("  üëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞ –≤–≤–æ–¥–∞

            if (choice == 1) {
                /*
                1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç - –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç
                3. –ï—Å–ª–∏ –µ—Å—Ç—å - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫
                4. –°—Ç–∞–≤–∏–º –ø–∞—É–∑—É
                */
                MyList<User> users = service.getAllUsers();

                if (users.isEmpty()) {
                    prnt("\n –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.", 3);
                } else {

                    // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    prnt("\n = –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ===\n", 1);
                    int i=0;
                    for (User user : users) {
                        i++;
                        prnt(""+i+": "
                                + "Email: " + user.getEmail() + ", "
                                + "–†–æ–ª—å: " + user.getRole() + ", "
                                + "–ö–Ω–∏–≥–∏: " + user.getUserBooks().toString(), 3);
                    }
                }
                waitRead();

            } else if (choice == 0) {
                break;
            } else if (choice == 2) {

                // –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                prnt("\n   = –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", 1);
                System.out.print("     –í–≤–µ–¥–∏—Ç–µ email: ");

                String email = scanner.nextLine();
                User userByEmail = service.getUserByEmail(email);

                if (userByEmail == null) {
                    prnt("\n   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å email " + email + " –Ω–µ –Ω–∞–π–¥–µ–Ω.", 3);
                } else {
                    prnt("  –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "
                            + "Email: " + userByEmail.getEmail() + ", "
                            + "–†–æ–ª—å: " + userByEmail.getRole() + ", "
                            + "–ö–Ω–∏–≥–∏: " + userByEmail.getUserBooks().toString(), 3);
                }
                waitRead();
            } else if (choice == 3){
                addUser("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ");
            } else if (choice == 4){
                editUser();
            } else if (choice == 5) {
                deleteUser();
                waitRead();
            }
            else {
                prnt("\n   –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", 4);
                waitRead();
            }
        }
    }

    private void waitRead() {
        System.out.println("\n   –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ Enter...");
        scanner.nextLine(); // –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è Enter
    }

    private void loginUser() {
        prnt("\n   = –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", 1);
        System.out.print("     –í–≤–µ–¥–∏—Ç–µ email: ");
        String email = scanner.nextLine();

        System.out.print("     –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        boolean loggedIn = service.loginUser(email, password);

        if (loggedIn) {
            prnt("\n   [+] –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, "+ email + "!\n", 2);
            //waitRead();
        } else {
            prnt("\n   [!] –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å!", 4);
            waitRead();
        }
    }

    private void addUser(String action) {

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        /*
         1. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è email –∏ –ø–∞—Ä–æ–ª—å
         2. –ü–µ—Ä–µ–¥–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –°–ï–†–í–ò–°–ù–´–ô —Å–ª–æ–π
         3. –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è -
         4. –°–æ–æ–±—â–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
         */

        prnt("\n   = " + action + " –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", 1);
        System.out.print("     –í–≤–µ–¥–∏—Ç–µ email: ");
        String email = scanner.nextLine();
        System.out.print("     –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        User user = service.registerUser(email, password);

        if (user == null) {
            prnt("  [!] –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞", 4);
        } else {
            prnt("\n    [+] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", 2);
        }

        waitRead();
    }
    private void deleteUser() {
        prnt("\n = –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", 1);
        System.out.print("   –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ email: ");
        String email = scanner.nextLine();

        if (!service.deleteUser(email)) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if (service.getUserByEmail(email) == null) {
                prnt("\n  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", 4);
            } else {
                prnt("\n   –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–∞–∫ –∫–∞–∫ —É –Ω–µ–≥–æ –µ—Å—Ç—å –∫–Ω–∏–≥–∏!", 4);
            }
        } else {
            prnt("\n   –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ.", 2);
        }

    }

    private void editUser() {
        prnt("\n = –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", 1);
        System.out.print("   –í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ");
        String email = scanner.nextLine();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        User user = service.getUserByEmail(email);
        if (user == null) {
            prnt(" –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", 4);
            waitRead();
            return;
        }

        System.out.print("   –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å: ");
        String newPassword = scanner.nextLine();

        boolean result = service.updatePassword(email, newPassword);
        if (result) {
            prnt("\n  –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ.", 2);
        } else {
            prnt("\n  –ù–µ –ø—Ä–æ–π–¥–µ–Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è! –ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–º–µ–Ω–µ–Ω–æ.", 4);
        }

        waitRead();
    }
}