package view;

import model.Book;
import model.Role;
import model.User;
import service.MainService;
import utils.MyList;

import java.util.Scanner;

import static view.RainbowConsole.*;

public class Menu {

    private final MainService service;
    private final Scanner scanner = new Scanner(System.in);

    public Menu(MainService service) {
        this.service = service;
    }

    public void start() {
        while (true) {
            User activeUser = service.getActiveUser(); // –ø–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            Role role = (activeUser != null) ? activeUser.getRole() : Role.GUEST; // –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –µ–≥–æ —Ä–æ–ª—å
            showMenu(role, activeUser);  // –ø–µ—Ä–µ–¥–∞–µ–º role –∏ activeUser

            // –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –∑–∞—â–∏—Ç–∞ –æ—Ç –æ—à–∏–±–∫–∏
            if (scanner.hasNextInt()) {
                int choice = scanner.nextInt();
                scanner.nextLine(); // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞ –≤–≤–æ–¥–∞
                handleMenuChoice(choice, role);
            } else {
                // –ï—Å–ª–∏ –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ –æ—á–∏—â–∞–µ–º –≤–≤–æ–¥
                prnt("\n   [!] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –º–µ–Ω—é!", 4);
                scanner.nextLine();
                waitRead();
            }
        }
    }

    private void showMenu(Role role, User activeUser) {
        prnt("== üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ \"–ó–Ω–∞–Ω–∏—è –í–µ–∫–∞\" ===", 1);
        prnt("1. –í—Å–µ –∫–Ω–∏–≥–∏", 0);
        prnt("2. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–Ω–∏–≥–∏", 0);
        prnt("3. –ö–Ω–∏–≥–∏ –ø–æ –∞–≤—Ç–æ—Ä—É", 0);
        prnt("4. –ö–Ω–∏–≥–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", 0);
        prnt("5. –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", 0);
        prnt("6. –ü–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É", 0);

        if (role == Role.USER || role == Role.ADMIN) {
            prnt("-----------------------------", 1);
            prnt("7. –í–∑—è—Ç—å –∫–Ω–∏–≥—É", 0);
            prnt("8. –í–µ—Ä–Ω—É—Ç—å –∫–Ω–∏–≥—É", 0);
            prnt("9. " + ACCENT + "‚ù§" + RESET + " –ú–æ–∏ –∫–Ω–∏–≥–∏", 0);
        }

        if (role == Role.ADMIN) {
            prnt("--------------------------------", 1);
            prnt("10. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É", 1);
            prnt("11. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–∏–≥—É", 1);
            prnt("12. –£–¥–∞–ª–∏—Ç—å –∫–Ω–∏–≥—É", 1);
            prnt("13. –ö–Ω–∏–≥–∏ –Ω–∞ —Ä—É–∫–∞—Ö", 1);
            prnt("14. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", 2);
        }

        if (role == Role.GUEST) {
            prnt("15. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", 2);
            prnt("16. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", 2);
        }

        if (role == Role.USER || role == Role.ADMIN) {
            String username = activeUser.getEmail();
            String roleName = activeUser.getRole().name();
            prnt("--------------------------------", 1);
            prnt("17. –í—ã–π—Ç–∏ (" + username + ")", 3);
        }

        prnt("0. Exit", 3);
        prnt("==============================", 1);
        System.out.print("  üëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: ");
    }

    private void handleMenuChoice(int choice, Role role) {
        if (choice == 1) {
            /*
            1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥
            2. –ï—Å–ª–∏ –∫–Ω–∏–≥ –Ω–µ—Ç - –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ –ø—É—Å—Ç.
            3. –ï—Å–ª–∏ –∫–Ω–∏–≥–∏ –µ—Å—Ç—å - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥
            4. –°—Ç–∞–≤–∏–º –∑–∞–¥–µ—Ä–∂–∫—É - –¥–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫
            */
            MyList<Book> books = service.getAllBooks();
            System.out.println();
            if (books.isEmpty()) {
                prnt("–ö–Ω–∏–≥ –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
            } else {
                for (Book book : books) {
                    System.out.println("   " + book);
                }
            }
            waitRead();

        } else if (choice == 2) {
            service.getAvailableBooks();
        } else if (choice == 3) {
            prnt("–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –∞–≤—Ç–æ—Ä—É –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.", 3);
            waitRead();
        } else if (choice == 4) {
            prnt("–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.", 3);
            waitRead();
        } else if (choice == 5) {
            // service.getBooksByTitle();
        } else if (choice == 6) {
            // service.getBooksByAuthor();
        } else if (choice == 7 && (role == Role.USER || role == Role.ADMIN)) {
            // service.rentBook();
        } else if (choice == 8 && (role == Role.USER || role == Role.ADMIN)) {
            // service.returnBook();
        } else if (choice == 9 && (role == Role.USER || role == Role.ADMIN)) {
            // service.showUserBooks();
        } else if (choice == 10 && role == Role.ADMIN) {
            // service.addBook();
        } else if (choice == 11 && role == Role.ADMIN) {
            // service.editBook();
        } else if (choice == 12 && role == Role.ADMIN) {
            // service.removeBook();
        } else if (choice == 13 && role == Role.ADMIN) {
            // service.showBookHolders();
        } else if (choice == 14 && role == Role.ADMIN) {
            showUserManagementMenu();
        } else if (choice == 15) {
            registerUser();
        } else if (choice == 16) {
            loginUser();
        } else if (choice == 17 && (role == Role.USER || role == Role.ADMIN)) {
            service.logout();
            prnt("\n   –í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞!", 2);
            waitRead();
        } else if (choice == 0) {
            prnt("\n   –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –µ—â–µ!", 2);
            System.exit(0);
        } else {
            prnt("\n  –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", 4);
            waitRead();
        }
    }

    private void showUserManagementMenu() {
        while (true) {
            prnt("=== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ ===", 1);
            prnt("1. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", 2);
            prnt("2. –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–º–µ–Ω–∏", 2);
            prnt("3. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 2);
            prnt("4. –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 2);
            prnt("5. –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", 2);
            prnt("0. –ù–∞–∑–∞–¥", 3);
            prnt("==============================", 1);
            System.out.print("  üëâ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // –û—á–∏—Å—Ç–∫–∞ –±—É—Ñ–µ—Ä–∞ –≤–≤–æ–¥–∞

            if (choice == 1) {
                /*
                1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç - –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç
                3. –ï—Å–ª–∏ –µ—Å—Ç—å - –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫
                4. –°—Ç–∞–≤–∏–º –ø–∞—É–∑—É
                */
                MyList<User> users = service.getAllUsers();

                if (users.isEmpty()) {
                    prnt("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç.", 3);
                } else {
                    for (User user : users) {
                        System.out.println("   " + user);
                    }
                }
                waitRead();

            } else if (choice == 0) {
                break;
            } else {
                prnt("\n  –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", 4);
                waitRead();
            }
        }
    }

    private void waitRead() {
        System.out.println("\n   –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ Enter...");
        scanner.nextLine(); // –ñ–¥–µ–º –Ω–∞–∂–∞—Ç–∏—è Enter
    }

    private void loginUser() {
        prnt("\n   = –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", 1);
        System.out.print("     –í–≤–µ–¥–∏—Ç–µ email: ");
        String email = scanner.nextLine();

        System.out.print("     –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        boolean loggedIn = service.loginUser(email, password);

        if (loggedIn) {
            prnt("\n   [+] –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, "+ email + "!", 2);
            waitRead();
        } else {
            prnt("\n  [!] –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å.", 4);
            waitRead();
        }
    }

    private void registerUser() {

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        /*
         1. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è email –∏ –ø–∞—Ä–æ–ª—å
         2. –ü–µ—Ä–µ–¥–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –°–ï–†–í–ò–°–ù–´–ô —Å–ª–æ–π
         3. –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ —Å–ª–æ—è -
         4. –°–æ–æ–±—â–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
         */

        prnt("\n   = –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", 1);
        System.out.print("     –í–≤–µ–¥–∏—Ç–µ email: ");
        String email = scanner.nextLine();

        System.out.print("     –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        User user = service.registerUser(email, password);

        if (user == null) {
            prnt("  [!] –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞", 4);
        } else {
            prnt("\n   [+] –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ!", 2);
        }

        waitRead();

    }

}
